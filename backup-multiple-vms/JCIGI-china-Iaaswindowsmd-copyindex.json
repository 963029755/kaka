{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "Rgname": {
      "type": "string"
    },
    "numberOfInstances": {
      "type": "int",
      "minValue": 1,
      "maxValue": 2,
      "metadata": {
        "description": "Number of VMs to deploy, limit 5 since this sample is using a single storage account"
      }
    },
	
    "virtualMachineName": {
      "type": "string"
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "allowedValues": [
        "Standard_A2",
        "Standard_F4",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS3_v2"
      ],
      "metadata": {
        "description": "Size of the VM"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Type of storage account"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "allowedValues": [
        "MicrosoftWindowsServer",
        "yungoalbj"
      ],
      "metadata": {
        "description": "Image Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "allowedValues": [
        "WindowsServer",
        "redhat"
      ],
      "metadata": {
        "description": "Image Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter",
        "redhat_en-us_7_3_0"
      ],
      "metadata": {
        "description": "Image SKU"
      }
    },
    "imageVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "What version of the image."
      }
    },
    "adminUsername": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "vnet-msdn-china-east-001",
      "allowedValues": [
        "vnet-msdn-china-east-001"
      ],
      "metadata": {
        "description": "Name of the virtualNetwork"
      }
    }, 
    "networkWatcherName": {
      "type": "string",
      "defaultValue": "microsoft.network-watcher-windows-20180518032416",
      "allowedValues": [
        "microsoft.network-watcher-windows-20180518032416"
      ],
      "metadata": {
        "description": "Name of the networkWatcher value"
      }
    }, 

    "backupVaultName": {
      "type": "string",
      "defaultValue": "rsv-ps-msdn-echina-001",
      "allowedValues": [
        "rsv-ps-msdn-echina-001"
      ],
      "metadata": {
        "description": "Name of the BackupVault"
      }
    },
    "backupFabricName": {
      "type": "string"
    },
    "backupVaultRGName": {
      "type": "string",
      "defaultValue": "backuptest",
     
      "metadata": {
        "description": "BackupVault Resource Group Name"
      }
    },
    "backupVaultRGIsNew": {
      "type": "bool"
    },
    "backupPolicyName": {
      "type": "string",
      "defaultValue": "DefaultPolicy",
      "allowedValues": [
        "DefaultPolicy"
      ],
      "metadata": {
        "description": "Name of the BackupPolicy"
      }
    },
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "nsg-snet-msdn-echina",
      "allowedValues": [
        "nsg-snet-msdn-echina"
      ],
      "metadata": {
        "description": "Name of the NetworkSecurityGroup"
      }
    },

    "adminPassword": {
      "type": "securestring"
    },
    "diagnosticsStorageAccountName": {
      "type": "string",
      "defaultValue": "backcupdiagnos",
      "allowedValues": [
        "backcupdiagnos"
      ],
      "metadata": {
        "description": "Name of the diagnosticsStorageAccount"
      }
    },
    "diagnosticsStorageAccountId": {
      "type": "string",
      "defaultValue": "/subscriptions/*******************/resourceGroups/backuptest/providers/Microsoft.Storage/storageAccounts/backcupdiagnos",
      "metadata": {
        "description": "Name of the diagnosticsStorageAccount"
      }

    },
    "subnetName": {
      "type": "string",
      "defaultValue": "snet-msdn-echina-001",
      "allowedValues": [
        "snet-msdn-echina-002"
      ],
      "metadata": {
        "description": "Name of the subnet"
      }
    }
  },
  "variables": {
    "vnetId": "[resourceId('backuptest','Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "diagnosticsExtensionName": "IaaSDiagnostics",
    "intNumberOfServerInstances": "[int(parameters('numberOfInstances'))]",
	"backupFabric": "Azure",
    "v2VmType": "Microsoft.Compute/virtualMachines",
    "v2VmContainer": "iaasvmcontainer;iaasvmcontainerv2;",
    "v2Vm": "vm;iaasvmcontainerv2;"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('virtualMachineName'), copyIndex())]",
      "apiVersion": "2016-04-30-preview",
      "location": "[parameters('location')]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('intNumberOfServerInstances')]"
      },
      "properties": {
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "[parameters('imageVersion')]"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('storageAccountType')]"
            }
          },
          "dataDisks": [
            {
              "lun": 0,
              "createOption": "Empty",
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "[parameters('storageAccountType')]"
              },
              "diskSizeGB": 32
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('NIC-',parameters('virtualMachineName'),'-ps','-00',copyIndex()))]"
            }
          ]
        },
        "licenseType": "Windows_Server",
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('backuptest', 'Microsoft.Storage/storageAccounts', parameters('diagnosticsStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/','NIC-',parameters('virtualMachineName'),'-ps','-00',copyIndex())]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachineName'),copyIndex(),'/', variables('diagnosticsExtensionName'))]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "copy": {
        "name": "diagSettingsLoop",
        "count": "[variables('intNumberOfServerInstances')]"
      },
      "properties": {
        "publisher": "Microsoft.Azure.Diagnostics",
        "type": "IaaSDiagnostics",
        "typeHandlerVersion": "1.5",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "StorageAccount": "[parameters('diagnosticsStorageAccountName')]",
          "WadCfg": {
            "DiagnosticMonitorConfiguration": {
              "overallQuotaInMB": 5120,
              "Metrics": {
                "resourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'),copyIndex())]",
                "MetricAggregation": [
                  {
                    "scheduledTransferPeriod": "PT1H"
                  },
                  {
                    "scheduledTransferPeriod": "PT1M"
                  }
                ]
              },
              "DiagnosticInfrastructureLogs": {
                "scheduledTransferLogLevelFilter": "Error"
              },
              "PerformanceCounters": {
                "scheduledTransferPeriod": "PT1M",
                "PerformanceCounterConfiguration": [
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\% Processor Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\% Privileged Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\% User Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\Processor Frequency",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\Processes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Thread Count",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Handle Count",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\System Up Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\Context Switches/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\Processor Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\% Committed Bytes In Use",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Available Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Committed Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Cache Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Pool Paged Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Pool Nonpaged Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Pages/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Page Faults/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Working Set",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Working Set - Private",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Read Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Write Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Idle Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Bytes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Read Bytes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Write Bytes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Transfers/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Reads/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Writes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Transfer",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Read",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Write",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Read Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Write Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Free Space",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Free Megabytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Bytes Total/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Bytes Sent/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Bytes Received/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Sent/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Received/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Outbound Errors",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Received Errors",
                    "sampleRate": "PT1M"
                  }
                ]
              },
              "WindowsEventLog": {
                "scheduledTransferPeriod": "PT1M",
                "DataSource": [
                  {
                    "name": "Application!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                  },
                  {
                    "name": "Security!*[System[band(Keywords,4503599627370496)]]"
                  },
                  {
                    "name": "System!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                  }
                ]
              }
            }
          }
        },
        "protectedSettings": {
          "storageAccountName": "[parameters('diagnosticsStorageAccountName')]",
          "storageAccountKey": "[listKeys(parameters('diagnosticsStorageAccountId'),'2015-06-15').key1]",
          "storageAccountEndPoint": "https://core.chinacloudapi.cn/"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('virtualMachineName'),copyIndex()))]"
      ]
    },
	
	
	
	
	
	
   {
      "name": "[concat(parameters('backupVaultName'), '/', variables('backupFabric'), '/', variables('v2VmContainer'), concat(parameters('rgname'),';',parameters('virtualMachineName'),copyIndex()), '/', variables('v2Vm'), concat(parameters('rgname'),';',parameters('virtualMachineName'),copyIndex()))]",
      "apiVersion": "2016-06-01",
      "location": "[parameters('location')]",
      "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
      "copy": {
        "name": "backupSettingsLoop",
        "count": "[variables('intNumberOfServerInstances')]"
      },
      "properties": {
        "protectedItemType": "[variables('v2VmType')]",
        "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies',parameters('backupVaultName'),parameters('backupPolicyName') )]",
        "sourceResourceId": "[resourceId(subscription().subscriptionId,parameters('rgname'),'Microsoft.Compute/virtualMachines',concat(parameters('virtualMachineName'),copyIndex()))]"
      },
     "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',parameters('virtualMachineName'),copyIndex(),'/extensions/', variables('diagnosticsExtensionName'))]"
      ]
    },
  
  
  
  
  
  
  
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('NIC-',parameters('virtualMachineName'),'-ps','-00',copyIndex())]",
      "apiVersion": "2016-09-01",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('intNumberOfServerInstances')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('backuptest', 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
        }
      },
      "dependsOn": [
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(parameters('networkWatcherName'),copyIndex())]",
      "apiVersion": "2015-01-01",
      "copy": {
        "name": "networkWatcherSettingsLoop",
        "count": "[variables('intNumberOfServerInstances')]"
      }, 
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://gallery.windowsazure.cn/artifact/20161101/microsoft.network-watcher-windows-arm.1.4.270/Artifacts/MainTemplate.json"
        },
        "parameters": {
          "vmName": {
            "value": "[concat(parameters('virtualMachineName'),copyIndex())]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',parameters('virtualMachineName'),copyIndex(),'/extensions/', variables('diagnosticsExtensionName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "name": "[concat(parameters('virtualMachineName'),copyIndex(),'/BGInfo',copyIndex())]",
      "copy": {
        "name": "bginfoloop",
        "count": "[variables('intNumberOfServerInstances')]"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "BGInfo",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "Properties": {
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('virtualMachineName'),copyIndex()))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachineName'),copyIndex(),'/Microsoft.Powershell.DSC',copyIndex())]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "powershellDSCLoop",
        "count": "[variables('intNumberOfServerInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('virtualMachineName'),copyIndex()))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.26",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "protectedSettings": {
            "Items": {
              "registrationKeyPrivate": "registrationKey"
            }
          },
          "publicSettings": {
            "configurationArguments": [
              {
                "Name": "RegistrationKey",
                "Value": {
                  "UserName": "PLACEHOLDER_DONOTUSE",
                  "Password": "PrivateSettingsRef:registrationKeyPrivate"
                }
              },
              {
                "RegistrationUrl": "registrationUrl"
              },
              {
                "NodeConfigurationName": "nodeConfigurationName"
              }
            ]
          }
        }
      }
    }

  ],
  "outputs": {
    "adminUsername": {
      "type": "String",
      "value": "[parameters('adminUsername')]"
    }
  }
}
